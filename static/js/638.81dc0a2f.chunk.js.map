{"version":3,"file":"static/js/638.81dc0a2f.chunk.js","mappings":"2NAIaA,EAAkDC,EAAAA,Y,mBCH/D,EAA+B,kC,4BCgB/B,EAfsCC,EAAAA,MAAW,YAAsB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxD,OACE,4BACE,0BAAOD,KACP,0BAAOC,MAGZ,ICJYC,GAAWC,E,OAAAA,KAFH,SAACC,GAAD,OAAsBA,CAAtB,IAEgC,SAACC,GAAD,OAAUA,EAAKC,YAAYC,KAA3B,ICkCrD,EA7B8BR,EAAAA,MAAW,WACvC,IAAMQ,EAAQV,EAAeK,GAC7B,EAA6BL,GAAe,SAACO,GAAD,OAAWA,EAAME,WAAjB,IAApCE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAEbC,GJX4BC,EAAAA,EAAAA,eIYlC,EAA4CZ,EAAAA,SAAe,CACzDa,IAAK,OACLC,MAAO,QAFT,eAAOC,EAAP,KAAuBC,EAAvB,KAaA,OARAhB,EAAAA,WAAgB,WACdgB,EAAkB,CAChBH,IAAK,QACLC,MAAO,QAETH,GAASM,EAAAA,EAAAA,GAAWF,GACrB,GAAE,KAGD,iBAAKG,UAAWC,IAAGC,GAAnB,UACGX,IAAa,SAAC,KAAD,IACbC,IAAS,wBAAKA,IAFjB,OAGGF,QAHH,IAGGA,OAHH,EAGGA,EAAOa,KAAI,SAACC,GACX,OAAO,SAAC,GAAD,UAA4BA,GAAbA,EAAKC,GAC5B,MAGN,G","sources":["hooks/redux.ts","webpack://react-app-template_v2/./src/widgets/UsersWidget/styles/UsersWidget.module.scss?031a","widgets/UsersWidget/modules/UserItem/index.tsx","store/selectors/UsersSliceSelectors.ts","widgets/UsersWidget/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"users_widget\":\"UsersWidget_users_widget__TH0yP\"};","import React from \"react\";\r\n\r\nconst UserItem: React.FC<PropsType> = React.memo(({ name, email }) => {\r\n  return (\r\n    <div>\r\n      <span>{name}</span>\r\n      <span>{email}</span>\r\n    </div>\r\n  );\r\n});\r\n\r\ninterface PropsType {\r\n  id: string | number;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport default UserItem;\r\n","import { createSelector } from \"reselect\";\r\nimport { RootState } from \"../store\";\r\n\r\nconst getRootState = (state: RootState) => state;\r\n\r\nexport const getUsers = createSelector(getRootState, (data) => data.userReducer.users);\r\n","import React from \"react\";\r\nimport { useAppSelector } from \"../../hooks/redux\";\r\nimport cn from \"classnames\";\r\nimport styles from \"./styles/UsersWidget.module.scss\";\r\nimport { useAppDispatch } from \"./../../hooks/redux\";\r\nimport { fetchUsers } from \"../../store/reducers/actionCreators/UsersActionCreators\";\r\nimport { Preloader } from \"../../components/common\";\r\nimport { UserItem } from \"./modules\";\r\nimport { getUsers } from \"../../store/selectors/UsersSliceSelectors\";\r\n\r\nconst UsersWidget: React.FC = React.memo(() => {\r\n  const users = useAppSelector(getUsers);\r\n  const { isLoading, error } = useAppSelector((state) => state.userReducer);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [usersQueryArgs, setUsersQueryArgs] = React.useState({\r\n    key: \"name\",\r\n    order: \"asc\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setUsersQueryArgs({\r\n      key: \"email\",\r\n      order: \"asc\",\r\n    });\r\n    dispatch(fetchUsers(usersQueryArgs));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={cn(styles.users_widget)}>\r\n      {isLoading && <Preloader />}\r\n      {error && <h1>{error}</h1>}\r\n      {users?.map((user) => {\r\n        return <UserItem key={user.id} {...user} />;\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default UsersWidget;\r\n"],"names":["useAppSelector","useSelector","React","name","email","getUsers","createSelector","state","data","userReducer","users","isLoading","error","dispatch","useDispatch","key","order","usersQueryArgs","setUsersQueryArgs","fetchUsers","className","cn","styles","map","user","id"],"sourceRoot":""}